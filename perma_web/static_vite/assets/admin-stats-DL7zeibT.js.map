{"version":3,"file":"admin-stats-DL7zeibT.js","sources":["../../static/js/admin-stats.js"],"sourcesContent":["var DOMHelpers = require('./helpers/dom.helpers.js');\nvar HandlebarsHelpers = require('./helpers/handlebars.helpers.js');\n\nfunction fillSection(name, callback){\n  $.getJSON(location.pathname + \"/\" + name).then(function (data) {\n    if (name == 'celery' && (!data.queues || !Boolean(data.queues.length))){\n      // If no data was returned, don't redraw the section.\n      return\n    }\n    DOMHelpers.changeHTML('#' + name, HandlebarsHelpers.renderTemplate('#' + name + '-template', data));\n\n    if (callback){\n      callback();\n    }\n  });\n}\n\nfillSection(\"capture_errors\");\nfillSection(\"celery_queues\");\nfillSection(\"celery\");\nfillSection(\"rate_limits\");\nfillSection(\"job_queue\");\nfillSection(\"days\");\nfillSection(\"random\");\nfillSection(\"emails\");\n\n// Refresh the celery queue job counts automatically\nsetInterval(function(){ fillSection(\"celery_queues\")}, 2000);\n\n// Start refreshing the list of celery works and the jobs they are processing on button press\nfunction refresh_celery_jobs(){\n  return setInterval(function(){ fillSection(\"celery\")}, 2000);\n}\nlet celery_tasks_refresh = null;\ndocument.getElementById('toggle-tasks-auto-refresh').addEventListener('click', (e) => {\n  if (celery_tasks_refresh){\n    clearInterval(celery_tasks_refresh);\n    celery_tasks_refresh = null;\n    e.target.innerText = 'Start Auto-Refresh (every 2s)';\n  } else {\n    celery_tasks_refresh = refresh_celery_jobs();\n    e.target.innerText = 'Stop Auto-Refresh';\n  }\n})\n\n// Refresh the rate limits once, on button press\n// or, start auto-refreshing every 20s, when the other button is pressed\nfunction refresh_rate_limits(){\n  let status = document.getElementById('rate-limits-status')\n  status.innerText = 'Refreshing...';\n  fillSection(\"rate_limits\", () => {\n    status.innerText = 'Refreshed!';\n    setTimeout(()=> status.innerText = '', 2000);\n  });\n}\nfunction auto_refresh_rate_limits(){\n  return setInterval(function(){ refresh_rate_limits()}, 15000);\n}\ndocument.getElementById('refresh-rate-limits').addEventListener('click', (e) => {\n  refresh_rate_limits()\n})\nlet rate_limits_refresh = null;\ndocument.getElementById('auto-refresh-rate-limits').addEventListener('click', (e) => {\n  if (rate_limits_refresh){\n    clearInterval(rate_limits_refresh);\n    rate_limits_refresh = null;\n    e.target.innerText = 'Start Auto-Refresh (every 15s)';\n  } else {\n    e.target.innerText = 'Stop Auto-Refresh';\n    refresh_rate_limits()\n    rate_limits_refresh = auto_refresh_rate_limits();\n  }\n})\n\n\n// Start refreshing the list of capture jobs on button press\nfunction refresh_capture_jobs(){\n  return setInterval(function(){ fillSection(\"job_queue\")}, 2000);\n}\nlet capture_jobs_refresh = null;\ndocument.getElementById('toggle-capture-jobs-auto-refresh').addEventListener('click', (e) => {\n  if (capture_jobs_refresh){\n    clearInterval(capture_jobs_refresh);\n    capture_jobs_refresh = null;\n    e.target.innerText = 'Start Auto-Refresh (every 2s)';\n  } else {\n    capture_jobs_refresh = refresh_capture_jobs();\n    e.target.innerText = 'Stop Auto-Refresh';\n  }\n})\n\n\n// Refresh the capture errors once, on button press\n// or, start auto-refreshing every 15s, when the other button is pressed\nfunction refresh_capture_errors(){\n  let status = document.getElementById('capture-errors-status')\n  status.innerText = 'Refreshing...';\n  fillSection(\"capture_errors\", () => {\n    status.innerText = 'Refreshed!';\n    setTimeout(()=> status.innerText = '', 2000);\n  });\n}\nfunction auto_refresh_capture_errors(){\n  return setInterval(function(){ refresh_capture_errors()}, 15000);\n}\ndocument.getElementById('refresh-capture-errors').addEventListener('click', (e) => {\n  refresh_capture_errors()\n})\nlet capture_errors_refresh = null;\ndocument.getElementById('auto-refresh-capture-errors').addEventListener('click', (e) => {\n  if (capture_errors_refresh){\n    clearInterval(capture_errors_refresh);\n    capture_errors_refresh = null;\n    e.target.innerText = 'Start Auto-Refresh (every 15s)';\n  } else {\n    e.target.innerText = 'Stop Auto-Refresh';\n    refresh_capture_errors()\n    capture_errors_refresh = auto_refresh_capture_errors();\n  }\n})\n\n\n\n// Select the tab specified in the hash, if present on page load\nif (window.location.hash) {\n    let tabNav = document.querySelector(`a[href=\"${window.location.hash}\"]`);\n    if (tabNav) {\n      tabNav.click();\n    }\n}\ndocument.querySelector('.nav-tabs').addEventListener('click', (e) => {\n  window.location.hash = e.target.hash;\n})\n"],"names":["DOMHelpers","HandlebarsHelpers","fillSection","name","callback","data","refresh_celery_jobs","celery_tasks_refresh","refresh_rate_limits","status","auto_refresh_rate_limits","rate_limits_refresh","refresh_capture_jobs","capture_jobs_refresh","refresh_capture_errors","auto_refresh_capture_errors","capture_errors_refresh","tabNav"],"mappings":"AAAA,IAAIA,EAAa,QAAQ,0BAA0B,EAC/CC,EAAoB,QAAQ,iCAAiC,EAEjE,SAASC,EAAYC,EAAMC,EAAS,CAClC,EAAE,QAAQ,SAAS,SAAW,IAAMD,CAAI,EAAE,KAAK,SAAUE,EAAM,CACzDF,GAAQ,WAAa,CAACE,EAAK,QAAU,CAASA,EAAK,OAAO,UAI9DL,EAAW,WAAW,IAAMG,EAAMF,EAAkB,eAAe,IAAME,EAAO,YAAaE,CAAI,CAAC,EAE9FD,GACFA,IAEN,CAAG,CACH,CAEAF,EAAY,gBAAgB,EAC5BA,EAAY,eAAe,EAC3BA,EAAY,QAAQ,EACpBA,EAAY,aAAa,EACzBA,EAAY,WAAW,EACvBA,EAAY,MAAM,EAClBA,EAAY,QAAQ,EACpBA,EAAY,QAAQ,EAGpB,YAAY,UAAU,CAAEA,EAAY,eAAe,CAAC,EAAG,GAAI,EAG3D,SAASI,GAAqB,CAC5B,OAAO,YAAY,UAAU,CAAEJ,EAAY,QAAQ,CAAC,EAAG,GAAI,CAC7D,CACA,IAAIK,EAAuB,KAC3B,SAAS,eAAe,2BAA2B,EAAE,iBAAiB,QAAU,GAAM,CAChFA,GACF,cAAcA,CAAoB,EAClCA,EAAuB,KACvB,EAAE,OAAO,UAAY,kCAErBA,EAAuBD,EAAmB,EAC1C,EAAE,OAAO,UAAY,oBAEzB,CAAC,EAID,SAASE,GAAqB,CAC5B,IAAIC,EAAS,SAAS,eAAe,oBAAoB,EACzDA,EAAO,UAAY,gBACnBP,EAAY,cAAe,IAAM,CAC/BO,EAAO,UAAY,aACnB,WAAW,IAAKA,EAAO,UAAY,GAAI,GAAI,CAC/C,CAAG,CACH,CACA,SAASC,GAA0B,CACjC,OAAO,YAAY,UAAU,CAAEF,EAAmB,CAAE,EAAG,IAAK,CAC9D,CACA,SAAS,eAAe,qBAAqB,EAAE,iBAAiB,QAAU,GAAM,CAC9EA,EAAqB,CACvB,CAAC,EACD,IAAIG,EAAsB,KAC1B,SAAS,eAAe,0BAA0B,EAAE,iBAAiB,QAAU,GAAM,CAC/EA,GACF,cAAcA,CAAmB,EACjCA,EAAsB,KACtB,EAAE,OAAO,UAAY,mCAErB,EAAE,OAAO,UAAY,oBACrBH,EAAqB,EACrBG,EAAsBD,EAAwB,EAElD,CAAC,EAID,SAASE,GAAsB,CAC7B,OAAO,YAAY,UAAU,CAAEV,EAAY,WAAW,CAAC,EAAG,GAAI,CAChE,CACA,IAAIW,EAAuB,KAC3B,SAAS,eAAe,kCAAkC,EAAE,iBAAiB,QAAU,GAAM,CACvFA,GACF,cAAcA,CAAoB,EAClCA,EAAuB,KACvB,EAAE,OAAO,UAAY,kCAErBA,EAAuBD,EAAoB,EAC3C,EAAE,OAAO,UAAY,oBAEzB,CAAC,EAKD,SAASE,GAAwB,CAC/B,IAAIL,EAAS,SAAS,eAAe,uBAAuB,EAC5DA,EAAO,UAAY,gBACnBP,EAAY,iBAAkB,IAAM,CAClCO,EAAO,UAAY,aACnB,WAAW,IAAKA,EAAO,UAAY,GAAI,GAAI,CAC/C,CAAG,CACH,CACA,SAASM,GAA6B,CACpC,OAAO,YAAY,UAAU,CAAED,EAAsB,CAAE,EAAG,IAAK,CACjE,CACA,SAAS,eAAe,wBAAwB,EAAE,iBAAiB,QAAU,GAAM,CACjFA,EAAwB,CAC1B,CAAC,EACD,IAAIE,EAAyB,KAC7B,SAAS,eAAe,6BAA6B,EAAE,iBAAiB,QAAU,GAAM,CAClFA,GACF,cAAcA,CAAsB,EACpCA,EAAyB,KACzB,EAAE,OAAO,UAAY,mCAErB,EAAE,OAAO,UAAY,oBACrBF,EAAwB,EACxBE,EAAyBD,EAA2B,EAExD,CAAC,EAKD,GAAI,OAAO,SAAS,KAAM,CACtB,IAAIE,EAAS,SAAS,cAAc,WAAW,OAAO,SAAS,IAAI,IAAI,EACnEA,GACFA,EAAO,MAAK,CAElB,CACA,SAAS,cAAc,WAAW,EAAE,iBAAiB,QAAU,GAAM,CACnE,OAAO,SAAS,KAAO,EAAE,OAAO,IAClC,CAAC"}